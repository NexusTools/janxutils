/*
 * janxutils is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, version 3 or any later version.
 * 
 * janxutils is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with janxutils.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

package nexustools.data.annote;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 *
 * @author katelyn
 */
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.TYPE})
public @interface ClassStream {
	
	/**
	 * Whether or not public fields should be read/written
	 * @return true/false
	 */
	boolean publicFields() default true;
	
	/**
	 * Whether or not protected fields should be read/written
	 * @return true/false
	 */
	boolean protectedFields() default false;
	
	/**
	 * Whether or not private fields should be read/written
	 * @return true/false
	 */
	boolean privateFields() default false;
	
	/**
	 * Whether or not transient fields should be read/written
	 * 
	 * @return true/false
	 */
	boolean transientFields() default false;
	
	/**
	 * Whether or not volatile fields should be read/written
	 * 
	 * @return true/false
	 */
	boolean volatileFields() default false;
	
	
	/**
	 * Whether or not to store the fields as they appear,
	 * without indicating any form of identifier
	 * 
	 * This option overrides 
	 * 
	 * @return true/false
	 */
	boolean staticFieldLayout() default false;
	
	
	/**
	 * Whether IDs should be generated for fields without them already
	 * this can save space, but would break things if a field is added/removed
	 * 
	 * IDs are generated by taking the list of fields without IDs and
	 * ordering them alphabetically, than running through them and assigning
	 * unused IDs in the order they appear after being sorted
	 * 
	 * This option does nothing for static fields
	 * and is inherently incompatible with staticFieldLayout
	 * 
	 * @return true/false
	 */
	boolean autogenFieldIDs() default false;
	
}
